import Head from "next/head";
import Image from "next/image";
import { RiSunLine } from "react-icons/ri";
import Button from "@components/libs/Button";
import {
  Drawer,
  DrawerCloseButton,
  DrawerContent,
  DrawerHeader,
  DrawerBody,
  DrawerFooter,
} from "@components/libs/Drawer";
import {
  Modal,
  ModalContent,
  ModalHeader,
  ModalBody,
  ModalFooter,
  ModalCloseButton,
} from "@components/libs/Modal";
import { CgSpinner } from "react-icons/cg";
import IconButton from "@components/libs/Button/IconButton";
import { useToggle } from "@hooks/useToggle";
import React, {
  useEffect,
  useRef,
  useCallback,
  createRef,
  useState,
} from "react";
import Portal from "@components/libs/Portal";
import { ListItem, List } from "@components/libs/List";
import { Menu, MenuButton, MenuList } from "@components/libs/Menu";
import { Example } from "@components/custom";
import { Divider } from "@components/libs/Divider";
import {
  Input,
  InputRightAddOn,
  InputLeftAddOn,
  InputRightButton,
  InputLeftButton,
  InputRightElement,
  InputLeftElement,
} from "@components/libs/Input";
import { InputGroup } from "@components/libs/Input/InputGroup";
import { ButtonGroup } from "@components/libs/Button/ButtonGroup";
import { ButtonBase } from "@components/libs/Button/ButtonBase";
import Badge from "@components/libs/Badge";
import { Checkbox } from "@components/libs/CheckBox";
import { CheckboxGroup } from "@components/libs/CheckBox/CheckBoxGroup";
import { Radio } from "@components/libs/Radio";
import { RadioGroup } from "@components/libs/Radio/RadioGroup";
import { InputBase } from "@components/libs/Input/InputBase";
import { Overlay } from "@components/libs/Overlay";
import {
  Alert,
  AlertDescription,
  AlertIcon,
  AlertTitle,
} from "@components/libs/Alert";
import Avatar from "@components/libs/Avatar";
import TextArea from "@components/libs/TextArea";
import Link from "next/link";
// import FormGroup from '@components/formGroup';

export default function Home() {
  const [open, toggle] = useToggle();
  const [value, setValue] = useState<string>();
  const handleClick = () => {
    toggle()
    !open ? window.history.pushState("", "", "/create-krowd") : window.history.go(-1);
  };
  return (
    <div className="w-screen h-screen flex mx-auto pt-5 ">
      <Head>
        <title>mega day</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Link href="/home">home page </Link>
        <InputGroup variant="outline" size="sm" colorScheme="gray" radius="md">
        <InputRightAddOn>https://</InputRightAddOn>
        <InputLeftAddOn>https://</InputLeftAddOn>
        
      
        </InputGroup>
      <Radio  label="good" />
      <Radio radioSize="xl" label="god" />
      <RadioGroup direction="column" name="habits" defaultValue="bad" radioSize="md">
        <Radio label="good" />
        <Radio label="god" />
        <Radio label="goed" />
      </RadioGroup>
      {/* <IconButton
        icon={<CgSpinner />}
        variant="text"
        isLoading
        ariaLabel="spinner"
        size="sm"
        radius="lg"
        hoverAnimation="wiggle"
      />
      <Button
        radius="md"
        size="md"
        variant="ghost"
      >
        blue
      </Button> */}
      {/* <Example /> */}

      <Button>create</Button>
      <Button variant="ghost" aria-haspopup="dialog" size="md" onClick={handleClick}>
        open custom modal
      </Button>
      <Modal scrollBehaviour="inside" open={open} toggle={toggle}>
      <Overlay />
      <ModalContent >
      <ModalCloseButton />
        <ModalHeader> modal Title</ModalHeader>
        <ModalBody>
          dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipis pis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur adipis
          <label htmlFor="name">
          <input id="name" name="name" type="text" placeholder="name" className="input" />
          </label>
        </ModalBody>
        <ModalFooter>
          <Button size="md" variant="outline"  >click me</Button>
        </ModalFooter>
      </ModalContent>
    </Modal>
      <Button>chair</Button>
      <Button
        animateOnHover
        variant="solid"
        aria-haspopup="dialog"
        size="md"
        onClick={toggle}
      >
        open
      </Button>
      {/* <Drawer placement="right" size="md" open={open} toggle={toggle}>
        <Overlay />
        <DrawerContent>
          <DrawerCloseButton />
          <DrawerHeader> Drawer Title</DrawerHeader>
          <DrawerBody>
            dolor sit amet, consectetur adipis lorem ipsum dolor sit amet,
            consectetur adipis lorem ipsum dolor sit amet, consectetur adipis
            lorem ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit
            amet, consectetur adipis lorem ipsum dolor sit amet,
            consecteconsectetur adipis pis lorem ipsum dolor sit amet,
            consectetur adipis lorem ipsum dolor sit amet, consectetur adipis
            lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem
            ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet,
            consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur
            adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum
            dolor sit amet, consectetur adipis lorem ipsum dolor sit amet,
            consecteconsectetur adipispis lorem ipsum dolor sit amet,
            consectetur adipis lorem ipsum dolor sit amet, consectetur adipis
            lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem
            ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet,
            consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur
            adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum
            dolor sit amet, consectetur adipis lorem ipsum dolor sit amet,
            consecteconsectetur adipispis lorem ipsum dolor sit amet,
            consectetur adipis lorem ipsum dolor sit amet, consectetur adipis
            lorem ipsum dolor sit amet, consecteconsectetur adipispis lorem
            ipsum dolor sit amet, consectetur adipis lorem ipsum dolor sit amet,
            consectetur adipis lorem ipsum dolor sit amet, consecteconsectetur
            adipispis lorem ipsum dolor sit amet, consectetur adipis lorem ipsum
            dolor sit amet, consectetur adipis lorem ipsum dolor sit amet,
            consecteconsectetur adipispis lorem ipsum dolor sit amet,
            consectetur adipis lorem ipsum dolor sit amet, consectetur adipis
            lorem ipsum dolor sit amet, consecteconsectetur adipis
          </DrawerBody>
          <DrawerFooter>
            <Button size="md" variant="outline" colorScheme="blue">
              click me
            </Button>
          </DrawerFooter>
        </DrawerContent>
      </Drawer> */}
      {/* <button type="button" className="btn text-black" onClick={handleToggleBefore}>
        Toggle Before
      </button>
      <button type="button" className="btn text-black" onClick={handleToggleExtra}>
        Toggle Extra
      </button>
      <button type="button" className="btn text-black" onClick={handleChangeName}>
        Change Extra portal name
      </button>
      {beforeOpen && (
        <Portal id="before">
          <code>Before</code>
          <hr />
        </Portal>
      )}
      <Portal id="after">
        <code>After:</code>
        <span>{name}</span>
        <hr />
      </Portal>
      {extraOpen && (
        <Portal id={name}>
          <code>Extra</code>
        </Portal>
      )}

    <p>
     amet, consectetur adipis
    </p> */}

      <List
        className="bg-blue-500"
        listStylePosition="inside"
        listStyleType="ol"
        divider
        spacing="md"
      >
        <ListItem>megade</ListItem>
        <ListItem>megatron</ListItem>
        <ListItem>mega</ListItem>
      </List>
      <div className="absolute top-[50%] left-[50%] h-28 w-[500px]">
        <ButtonGroup colorScheme="gray">
          <Button>save</Button>
          <Button>save</Button>
          <IconButton ariaLabel="icon" icon={<CgSpinner />} />
          <Badge>end</Badge>
          <ListItem>fend</ListItem>
        </ButtonGroup>
        <Example />
        {/* <Button variant="solid" colorScheme="amber"  >
      ade
    </Button> */}
        {/* <Button
      // colorScheme="red"
      rightIcon={<CgSpinner />}
      // as ="a"
      variant="text"
      // radius="full"
      // isLoading
      // disabled
      loadingText="timeout"
    >

    </Button> */}
        {/* <ButtonBase
      id="a"
      onClick={id => console.log(id)}
      // style={{ margin: 16 }}
      // variant="outline"
      // colorScheme = "amber"
      // as="a"
      // href="https://www.google.nl"
    >
      Click me!
    </ButtonBase> */}
        <IconButton ariaLabel="close" size="md" icon={<CgSpinner />} />
        <CheckboxGroup direction="column" checkboxSize="lg">
          <Checkbox label="right" />
          <Checkbox label="alright" />
          <Checkbox label="alLeft" />
          <Checkbox label="all good" />
        </CheckboxGroup>
        <Checkbox label="alLeft" squared={false} checkboxSize="xl"  />
        <Badge variant="ghost" size="lg" radius="none" colorScheme="green">
          close
        </Badge>
        {/* <Alert variant="subtle" status="error" size="lg" >
      <AlertIcon />
      <AlertTitle title="Later" />
      <AlertDescription description="check back tomorrow" />
    </Alert> */}
        <Avatar>
          <CgSpinner />
        </Avatar>
      </div>
    </div>
  );
}
